"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.useNativeRoute=useNativeRoute;var _global=require("../internals/global");function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys(t,e){var r,o=Object.keys(t);return Object.getOwnPropertySymbols&&(r=Object.getOwnPropertySymbols(t),e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),o.push.apply(o,r)),o}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(r),!0).forEach(function(e){_defineProperty(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):ownKeys(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}function _defineProperty(e,t,r){return(t=_toPropertyKey(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"==_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!=_typeof(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0===r)return("string"===t?String:Number)(e);r=r.call(e,t||"default");if("object"!=_typeof(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}var NATIVE_ROUTES=["navigateTo","redirectTo","switchTab","navigateBack","reLaunch"];function useNativeRoute(e,t){function r(r,o){return new Promise(function(e,t){_global.miniprogramThis[r].call(_global.miniprogramThis,_objectSpread(_objectSpread({},o),{},{success:e,fail:t}))})}var o=e.url,n=e.openType,n=void 0===n?"navigateTo":n,e=e.delta,e=void 0===e?1:e;return o?NATIVE_ROUTES.includes(n)?r(n,"navigateBack"===n?{delta:e}:{url:o}):Promise.reject('Invalid value of prop "openType" of "'.concat(t.is,'": expected "').concat(NATIVE_ROUTES.join(","),'", ')+"but got ".concat(n,".")):Promise.reject('Invalid value of prop "url" of "'.concat(t.is,'": Expected an Non-empty String.'))}